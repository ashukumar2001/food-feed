/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected/route'
import { Route as IndexImport } from './routes/index'
import { Route as ProtectedDashboardImport } from './routes/_protected/dashboard'
import { Route as ApiAuthCallbackProviderImport } from './routes/api/auth/callback/$provider'

// Create/Update Routes

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedDashboardRoute = ProtectedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const ApiAuthCallbackProviderRoute = ApiAuthCallbackProviderImport.update({
  id: '/api/auth/callback/$provider',
  path: '/api/auth/callback/$provider',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/api/auth/callback/$provider': {
      id: '/api/auth/callback/$provider'
      path: '/api/auth/callback/$provider'
      fullPath: '/api/auth/callback/$provider'
      preLoaderRoute: typeof ApiAuthCallbackProviderImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface ProtectedRouteRouteChildren {
  ProtectedDashboardRoute: typeof ProtectedDashboardRoute
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedDashboardRoute: ProtectedDashboardRoute,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteRouteWithChildren
  '/dashboard': typeof ProtectedDashboardRoute
  '/api/auth/callback/$provider': typeof ApiAuthCallbackProviderRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteRouteWithChildren
  '/dashboard': typeof ProtectedDashboardRoute
  '/api/auth/callback/$provider': typeof ApiAuthCallbackProviderRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/_protected/dashboard': typeof ProtectedDashboardRoute
  '/api/auth/callback/$provider': typeof ApiAuthCallbackProviderRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/dashboard' | '/api/auth/callback/$provider'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/dashboard' | '/api/auth/callback/$provider'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/_protected/dashboard'
    | '/api/auth/callback/$provider'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  ApiAuthCallbackProviderRoute: typeof ApiAuthCallbackProviderRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  ApiAuthCallbackProviderRoute: ApiAuthCallbackProviderRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected",
        "/api/auth/callback/$provider"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_protected": {
      "filePath": "_protected/route.tsx",
      "children": [
        "/_protected/dashboard"
      ]
    },
    "/_protected/dashboard": {
      "filePath": "_protected/dashboard.tsx",
      "parent": "/_protected"
    },
    "/api/auth/callback/$provider": {
      "filePath": "api/auth/callback/$provider.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
